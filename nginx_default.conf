user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    include /etc/nginx/conf.d/*.conf;

    upstream backend {
		server backend:8080;
	}

	upstream frontend {
		server frontend:3000;
	}

    server {
        listen 80;
        listen [::]:80;
        if ($host = seudominio.dev.br) {
        	return 301 https://$host$request_uri;
        } # managed by Certbot

        return 404; # managed by Certbot
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name seudominio.dev.br;

        ssl_certificate /etc/nginx/certificates/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/nginx/certificates/privkey.pem; # managed by Certbot
        include /etc/nginx/certificates/options-ssl-nginx.conf; # managed by Certbot
		ssl_dhparam /etc/nginx/certificates/ssl-dhparams.pem; # managed by Certbot
        if ($host != seudominio.dev.br) {
            return 404; # managed by Certbot
        }

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /api/ {
            proxy_pass http://backend;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
        }
    }
}